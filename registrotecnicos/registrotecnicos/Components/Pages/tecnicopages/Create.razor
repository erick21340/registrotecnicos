@page "/CreateTecnicos"
@inject TecnicoServices tecnicosServices
@inject NavigationManager navigation
@rendermode InteractiveServer

<PageTitle>Guardar nuevo técnico</PageTitle>

<EditForm Model="tecnico" OnValidSubmit="Crear">
    <DataAnnotationsValidator />
    <div class="container">
        <div class="card shadow-lg">
            <div class="card-header">
                <h1><strong>Crear nuevo técnico</strong></h1>
            </div>
            <div class="card-body">
                <label class="form-label" for="tipoid"><strong>TipoId</strong></label>
                <InputNumber id="tipoid" class="form-control" @bind-Value="tecnico.tipoid"></InputNumber>
                <ValidationMessage For="@(() => tecnico.tipoid)" />

                <label class="form-label" for="TecnicosTipos"><strong>Tipo</strong></label>
                <InputText id="TecnicosTipos" class="form-control" @bind-Value="tecnico.TecnicosTipos"></InputText>
                <ValidationMessage For="@(() => tecnico.TecnicosTipos)" />
            </div>
            <div class="card-footer">
                <button type="button" class="btn btn-outline-secondary" @onclick="Volver">Volver</button>
                <button type="submit" class="btn btn-outline-success bi bi-floppy"> Crear</button>
            </div>
        </div>
    </div>
</EditForm>

@code {
    public Tecnicos tecnico { get; set; } = new Tecnicos();

    public async Task Crear()
    {
        await tecnicosServices.Guardar(tecnico);
        tecnico = new Tecnicos();
        Volver();
    }

    public void Volver()
    {
        navigation.NavigateTo("/Tecnico");
    }
}

